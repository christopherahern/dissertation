{
    "contents" : "##########################################################################\n# Load libraries and scripts\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(grid)\nlibrary(xtable)\nsource(\"binning.R\")\n##########################################################################\n# Read in the data file\ndo.data = read.csv('do-support.csv',header=T, sep=',')\ndo.data = tbl_df(do.data) # Wrap data frame\n# Filter out tokens without do-support label, year, or type\nexcluded.texts = c(\"STAT\", \"ERV\", \"NEWCOME\", \"PURVER\")\n# STAT : statutes issued in legal language\n# ERV : English revised version of King James Bible, very archaic\n# NEWCOME: Translation of the bible\n# PURVER: Translation of the bible\ndo.data = do.data %>% filter(!is.na(do.supp) & !is.na(year) & !is.na(Type) & ! TextName %in% excluded.texts) \n##########################################################################\n# Plot data for all contexts\nplot.data = do.data %>% group_by(year, Type) %>% summarize(n = n(),s = sum(do.supp)) %>% mutate(p = s / n)\ndo.data.plot = ggplot(aes(x = year, y = p, color = Type, group = Type),\n    data = plot.data) +\n    geom_smooth(aes(weight = n), se = FALSE, method=\"loess\") +\n    coord_cartesian(ylim = c(-0.05,1.05)) +\n    ylab(\"Proportion do\") +\n    geom_point(aes(size = n), alpha = 0.4) +\n    xlab(\"Year\") +\n    scale_size_area(\"N\", max_size = 20) +\n    theme(text = element_text(size=20))\nggsave(file=\"do-support-plot.pdf\", plot = do.data.plot, width=8,height=6, compress=F)\n# Plot data for drift analysis, excluding contexts that don't change\nplot.drift = filter(plot.data, Type != \"Aff. Decl.\" & Type != \"Aff. Imp.\")\ndrift.data.plot = ggplot(aes(x = year, y = p, color = Type, group = Type), data = plot.drift) +\n    coord_cartesian(ylim = c(-0.05,1.05)) +\n    ylab(\"Proportion do\") +\n    geom_point(aes(size = n), alpha = 0.4) +\n    geom_smooth(aes(weight = n), se = FALSE, method=\"loess\") +\n    xlab(\"Year\") +\n    scale_size_area(\"N\", max_size = 20) +\n    theme(text = element_text(size=20))\nggsave(file=\"do-support-drift.pdf\", plot=drift.data.plot, width=8,height=6, compress=F)\n##########################################################################\n# Get data for statistical analysis\ndo.drift = do.data %>% filter(Type != \"Aff. Decl.\" & Type != \"Aff. Imp.\") %>% arrange(year)\ndo.drift$value = as.numeric(as.character(do.drift$do.supp))\n# When is the first instance of do-support\ndo.first = min(filter(do.drift, value == 1)$year)\n# Show the first instances of do-support\nfilter(do.drift, value == 1)\n# nrow(filter(do.drift, year <= 1500)) + nrow(filter(do.drift, year >= 1900))\n# Only include data from first instance of do support on\ndo.drift = filter(do.drift, year >= do.first)\n# Get number of tokens, years, documents, and authors in data\ndo.drift\ndo.drift %>% group_by(year) %>% summarize(test=n())\ndo.drift %>% group_by(AuthName) %>% summarize(test=n())\ndo.drift %>% group_by(TextName) %>% summarize(test=n())\n# Generate data files for all data\ndo.by.years(do.drift, 20, \"1440\")\ndo.by.quantiles(do.drift, 20, \"1440\")\n# Create several bin plots to compare the methods\nplot4 = compare.q.n(do.drift, 4, 5500)\nplot5 = compare.q.n(do.drift, 5, 5500)\nplot10 = compare.q.n(do.drift, 10, 5500)\nplot20 = compare.q.n(do.drift, 20, 5500)\n# Put them in a 2x2 grid\ngrid.newpage()\nvplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)\npushViewport(viewport(layout = grid.layout(2, 2)))\nprint(plot4, vp = vplayout(1, 1))\nprint(plot5, vp = vplayout(1, 2))\nprint(plot10, vp = vplayout(2, 1))\nprint(plot20, vp = vplayout(2, 2))\n# ggsave(file=\"do-compare-all.pdf\", width=8,height=6, compress=F)\n# Finest binning that guarantees more than 1000 tokens per variable-width bin\ncompare.q.n(do.drift, 9, 5500)\ncompare.q.n(do.drift, 10, 5500)\n# Generate tables for fixed- and variable-width bins\ndo.n.table = n.table(do.drift, 20)\nprint.xtable(xtable(do.n.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE)\nprint.xtable(xtable(do.n.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE, file=\"n.table.tex\") # Save table to file\ndo.q.table = q.table(do.drift, 20)\nprint.xtable(xtable(do.q.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE)\nprint.xtable(xtable(do.q.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE, file=\"q.table.tex\") # Save table to file\n################################################################################\n# Perform a conservative test to correct for autocorrelation\n# Seed for replication\nset.seed(1)\n# Sample one token per document, cf. length(unique(do.drift$TextName)) \nsample.data = do.drift %>% group_by(TextName) %>% do(sample_n(.,1)) %>% arrange(year)\nsample.q.table = q.table(sample.data, 19)\nprint.xtable(xtable(sample.q.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE)\nsample.n.table = n.table(sample.data, 16)\n# q.table(one.data, 20) # \"Absorption\" occurs in third increment; there are no 1 variants\n# Ratio of sample p value to full data p value\nsample.t.ratio = sample.q.table$t.FIT/do.q.table$t.FIT[1:16]\nqplot(c(4:19), sample.t.ratio, geom=c(\"boxplot\", \"jitter\")) + geom_hline(aes(yintercept=1), linetype=\"dashed\") + xlab(\"Bins\") + ylab(\"Ratio of sample t-statistic to full data t-statistic\") +  theme(text = element_text(size=20))\nshapiro.test(sample.t.ratio)\nt.test(sample.t.ratio-1,alternative=\"greater\")\n#\nsample.p.ratio = sample.q.table$FIT.P/do.q.table$FIT.P[1:16]\nqplot(c(4:19), sample.p.ratio, geom=c(\"boxplot\", \"jitter\")) + geom_hline(aes(yintercept=1), linetype=\"dashed\") + xlab(\"Bins\") + ylab(\"Ratio of sample p-value to full data p-value\") +  theme(text = element_text(size=20))\nshapiro.test(sample.p.ratio)\nwilcox.test(sample.p.ratio-1)\nwilcox.test(sample.p.ratio, alternative=\"greater\", mu=1)\n\n# Perform the most conservative test to correct for autocorrelation\n# Seed for replication\nset.seed(1)\n# Sample one token per document, cf. length(unique(do.drift$TextName)) \nauth.sample = do.drift %>% group_by(AuthName) %>% do(sample_n(.,1)) %>% arrange(year)\nauth.q.table = q.table(auth.sample, 12)\nprint.xtable(xtable(auth.q.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE)\nauth.n.table = n.table(sample.data, 12)\nprint.xtable(xtable(auth.n.table, digits=c(0,0,0,0,0,5,5,5,0,0,5)), include.rownames=FALSE)\nauth.p.ratio = auth.q.table$FIT.P/do.q.table$FIT.P[1:9]\nqplot(c(4:12), auth.p.ratio, geom=c(\"boxplot\", \"jitter\")) + geom_hline(aes(yintercept=1), linetype=\"dashed\") + xlab(\"Bins\") + ylab(\"Ratio of sample p-value to full data p-value\") +  theme(text = element_text(size=20))\nshapiro.test(auth.p.ratio)\nwilcox.test(auth.p.ratio, alternative=\"greater\",mu=1)\n\n################################################################################\n# Documents per bin\nn.docs.table = n.docs(do.drift, 20)\nprint.xtable(xtable(n.docs.table, digits=c(0,0,0,0,2,3)), include.rownames=FALSE)\nq.docs.table = q.docs(do.drift, 20)\nprint.xtable(xtable(q.docs.table, digits=c(0,0,0,0,2,3)), include.rownames=FALSE)\n# Authors per bin\nn.auths.table = n.auths(do.drift, 20)\nprint.xtable(xtable(n.auths.table, digits=c(0,0,0,0,2,3)), include.rownames=FALSE)\nq.auths.table = q.auths(do.drift, 20)\nprint.xtable(xtable(q.auths.table, digits=c(0,0,0,0,2,3)), include.rownames=FALSE)\n\n# Average number of tokens per document\nauth.tokens = do.drift %>% group_by(AuthName) %>% summarize(tokens = n()) %.% arrange(desc(tokens))\nboxplot(auth.tokens$tokens)\nplot(log(auth.tokens$tokens))\nwilcox.test(auth.tokens$tokens)\n\ndoc.tokens = do.drift %>% group_by(TextName) %>% summarize(tokens = n()) %.% arrange(desc(tokens))\nplot(log(doc.tokens$tokens))\n\nfilter(do.drift, AuthName == \"x\")\ndo.drift %>% filter(AuthName == \"x\") %>% group_by(TextName) %>% summarize(test=n())\ndo.drift %>% filter(is.na(AuthName)) %>% group_by(TextName) %>% summarize(test=n())\n%.% summarize(avg.doc = mean(test))\ndo.data %.% dplyr::group_by(AuthName) %.% summarize(test = n()) %.% summarize(avg.doc = mean(test))\n\n# How many tokens per author, per document\nlength(unique(do.drift$AuthName))\nlength(unique(do.drift$TextName))\n",
    "created" : 1424713692485.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2257089700",
    "id" : "B94447FD",
    "lastKnownWriteTime" : 1424190049,
    "path" : "~/Dropbox/time-series/code/do-report.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}