geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
# Plot comparison
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.45, se = FALSE, size=5) +
xlab("Year") +
ylab("Proportion") +
scale_size_area("N", max_size = 20) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
coord_cartesian(xlim = c(1090,1540)) +
coord_cartesian(ylim = c(-.1,1.1))
set.seed(1)
neg.data.jitter = neg.data.full %>% group_by(author) %>% mutate(year = year + (year[1] - jitter(year[1], amount=.5)))
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
# Run FIT
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
neg.data.jitter = neg.data.full %>% group_by(author) %>% mutate(year = year + (year[1] - jitter(year[1], amount=.5)))
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
# Run FIT
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
neg.data.jitter = neg.data.full %>% group_by(author) %>% mutate(year = year + (year[1] - jitter(year[1], amount=.5)))
# Check to make sure number of unique dates matches documents
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
# Run FIT
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 11)) # Absorption event
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
do.FIT(do.by.quantile(first.data, 13)) # 0.1361334, 0.3205971
set.seed(1)
neg.data.jitter = neg.data.full %>% group_by(author) %>% mutate(year = year + (year[1] - jitter(year[1], amount=.5)))
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
# Run FIT
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 11)) # Absorption event
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
do.FIT(do.by.quantile(first.data, 13)) # 0.1361334, 0.3205971
do.FIT(do.by.quantile(first.data, 14)) #
do.FIT(do.by.quantile(first.data, 15)) #
do.FIT(do.by.quantile(first.data, 16)) #
do.FIT(do.by.quantile(first.data, 17)) #
do.FIT(do.by.quantile(first.data, 18)) #
do.FIT(do.by.quantile(first.data, 19)) #
do.FIT(do.by.quantile(first.data, 20)) #
do.FIT(do.by.quantile(first.data, 16)) #
do.FIT(do.by.quantile(first.data, 15)) #
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
do.FIT(do.by.quantile(first.data, 11)) # Absorption event
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
do.FIT(do.by.quantile(first.data, 13)) # 0.1361334, 0.3205971
do.FIT(do.by.quantile(first.data, 14)) #
do.FIT(do.by.quantile(first.data, 15)) #
do.FIT(do.by.quantile(first.data, 16)) # Absorption event
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.45, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
print(xtable(q.table(second.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(second.data, 20))[c(7,10)] # Non-unique breaks
print(xtable(q.table(second.data, 12), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 11), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(do.FIT(do.by.quantile(second.data, 16)))) # Non-unique breaks
print(xtable(do.FIT(do.by.quantile(second.data, 15))) # Non-unique breaks
print(xtable(do.FIT(do.by.quantile(second.data, 15)))) # Non-unique breaks
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(second.data, 11))[c(7,10)] # Boundary   p = .1500596
do.FIT(do.by.quantile(second.data, 12)) # Borderline p = .07111779
do.FIT(do.by.quantile(second.data, 13)) # Borderline p = .08197854 ! SW-p = .005200949
do.FIT(do.by.quantile(second.data, 14)) # Borderline p = .09388815 ! SW-p = 0.04214308
do.FIT(do.by.quantile(second.data, 15)) # Marginal   p = .05676982 ! SW-p = 0.01571028
do.FIT(do.by.quantile(second.data, 16)) # Marginal   p = .05676982 ! SW-p = 0.01571028
do.FIT(do.by.quantile(second.data, 17)) # Marginal   p = .05676982 ! SW-p = 0.01571028
do.FIT(do.by.quantile(second.data, 18)) # Marginal   p = .05676982 ! SW-p = 0.01571028
do.FIT(do.by.quantile(second.data, 20)) # Marginal   p = .05676982 ! SW-p = 0.01571028
do.FIT(do.by.quantile(second.data, 13)) #
do.FIT(do.by.quantile(second.data, 14)) #
do.FIT(do.by.quantile(second.data, 15)) #
first.data = neg.data.jitter %.% filter(stages !=3 & year <=1351) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", se = FALSE, size=5) +
xlab("Year") +
ylab("Proportion") +
scale_size_area("N", max_size = 20) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
coord_cartesian(xlim = c(1090,1540)) +
coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",span=.45, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
first.data = neg.data.full %.% filter(stages !=3 & year <=1350) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",  se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
first.data = neg.data.jitter %.% filter(stages !=3 & year <=1351) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
# Plot comparison
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",span=.5, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
print(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 7))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 8))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 9))[c(7,10)] # Non-unique breaks
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% dplyr::group_by(year) %.% dplyr::mutate(value = stages=="3")
# Plot comparison
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages=="3")
# Plot comparison
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",  se = FALSE, size=5) +
xlab("Year") +
ylab("Proportion") +
scale_size_area("N", max_size = 20) +
theme(text = element_text(size=20)) +
theme(legend.position="none") +
coord_cartesian(xlim = c(1090,1540)) +
coord_cartesian(ylim = c(-.1,1.1))
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",  se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages=="3")
# Plot comparison
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess",  se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
# Run FIT
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(second.data, 10)) # Non-unique breaks
do.FIT(do.by.quantile(second.data, 11)) # Non-unique breaks
do.FIT(do.by.quantile(second.data, 12)) # Non-unique breaks
do.FIT(do.by.quantile(second.data, 13)) # Non-unique breaks
do.FIT(do.by.quantile(second.data, 14)) # Non-unique breaks
do.FIT(do.by.quantile(second.data, 10)) # Non-unique breaks
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(second.data, 4)) # Absorption
do.FIT(do.by.quantile(second.data, 6)) # Absorption
first.data = neg.data.full %.% group_by(year) %>% mutate(value = ! stages=="1") %>% select(year, value)
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(xtable)
source("neg-data.R")
source("binning.R")
first.data = neg.data.full %.% group_by(year) %>% mutate(value = ! stages=="1") %>% select(year, value)
print(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 9))[c(7,10)]  # Breaks are non-unique for finer bins
do.by.quantile(first.data, 9)
do.by.quantile(first.data, 8)
do.by.quantiles(first.data, 8, "LUMP")
do.by.quantiles(first.data, 8, "LUMP-FIRST")
do.by.quantiles(second.data, 8, "LUMP-SECOND")
first.data = neg.data.full %.% filter(stages !=3 & year <=1350) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
do.by.quantiles(first.data, 5, "SPLIT-FIRST")
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
second.data = neg.data.full %.% filter(stages != 1 & year >= 1350) %.% group_by(year) %.% mutate(value = stages=="3") %>% select(year, value)
do.by.quantiles(second.data, 5, "SPLIT-SECOND")
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
do.by.quantiles(first.data, 10, "JITTER-LUMP-FIRST")
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
do.by.quantiles(first.data, 16, "JITTER-LUMP-FIRST",start=11)
do.by.quantiles(first.data, 16, "JITTER-LUMP-FIRST")
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
do.by.quantiles(second.data, 16, "JITTER-LUMP-SECOND")
do.by.quantiles(second.data, 16, "JITTER-LUMP-SECOND")
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
do.by.quantiles(second.data, 16, "JITTER-LUMP-SECOND")
first.data = neg.data.jitter %.% filter(stages !=3 & year <=1351) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
do.by.quantiles(first.data, 5, "JITTER-SPLIT-FIRST")
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages=="3")
# Output the data
do.by.quantiles(second.data, 9, "JITTER-SPLIT-SECOND")
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
first.data
do.by.quantile(first.data, 4)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 5)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 5)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 5)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 5)
get.increments(first.data, 10)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 10)
get.increments(first.data, 11)
get.increments(first.data, 10)
get.increments(first.data, 9)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 9)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 9)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 9)
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
get.increments(first.data, 9)
increment.data = get.increments(first.data, 9)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_jitter()
increment.data = get.increments(first.data, 20)
increment.data = get.increments(first.data, 12)
increment.data = get.increments(first.data, 16)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_jitter()
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point()
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)))
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
increment.data = get.increments(first.data, 16)
# Plot them
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(intercept=0)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0)) + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0, type="dashed")) + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0, linetype="dashed")) + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages=="3")
increment.data = get.increments(second.data, 9)
# Plot them
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 15), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
increment.data = get.increments(second.data, 9)
# Plot them
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
second.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages=="3")
do.FIT(do.by.quantile(second.data, 10)) # Absorption
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
first.data = neg.data.jitter %.% filter(stages !=3 & year <=1351) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
first.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = first.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") +   theme(text = element_text(size=20)) +   theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
print(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 4))[c(7,10)] # Boundary  p = .13394961
do.FIT(do.by.quantile(first.data, 5))[c(7,10)] # Nope      p = .12035848 ! SW-p = 0.02479866
do.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 7))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 8))[c(7,10)] # Non-unique breaks
do.FIT(do.by.quantile(first.data, 9))[c(7,10)] # Non-unique breaks
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
increment.data = get.increments(second.data, 15)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
first.data = neg.data.full %.% group_by(year) %>% mutate(value = ! stages=="1") %>% select(year, value)
print(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.full %>% group_by(year) %.% mutate(value = stages=="3") %>% select(year, value)
print(xtable(q.table(second.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
source('~/Dropbox/dissertation/code/neg-test/r-neg-test/binning.R')
first.data = neg.data.full %.% group_by(year) %>% mutate(value = ! stages=="1") %>% select(year, value)
print(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
help(wilcox.test)
print(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.full %>% group_by(year) %.% mutate(value = stages=="3") %>% select(year, value)
print(xtable(q.table(second.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
first.data = neg.data.full %.% filter(stages !=3 & year <=1350) %.% group_by(year) %.% mutate(value = ! stages=="1") %>% select(year, value)
print(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.full %.% filter(stages != 1 & year >= 1350) %.% group_by(year) %.% mutate(value = stages=="3") %>% select(year, value)
print(xtable(q.table(second.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.full %.% filter(stages != 1 & year >= 1350) %.% group_by(year) %.% mutate(value = stages=="3") %>% select(year, value)
print(xtable(q.table(second.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 11)) # Absorption event
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
print(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875
do.FIT(do.by.quantile(first.data, 13)) # 0.1361334, 0.3205971
do.FIT(do.by.quantile(first.data, 14)) #
do.FIT(do.by.quantile(first.data, 15)) #
do.FIT(do.by.quantile(first.data, 16)) # Absorption event
increment.data = get.increments(first.data, 15)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
second.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)
ggplot(aes(x = year, y = p), data = second.plot.data) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.45, se = FALSE, size=5) +
xlab("Year") + ylab("Proportion") + theme(text = element_text(size=20)) + theme(legend.position="none") +
scale_size_area("N", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))
print(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 4), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 15), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
print(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results
do.FIT(do.by.quantile(second.data, 11)) #
do.FIT(do.by.quantile(second.data, 12)) #
do.FIT(do.by.quantile(second.data, 13)) #
do.FIT(do.by.quantile(second.data, 14)) #
do.FIT(do.by.quantile(second.data, 15)) #
do.FIT(do.by.quantile(second.data, 12)) #
do.FIT(do.by.quantile(second.data, 13)) #
do.FIT(do.by.quantile(second.data, 14)) #
do.FIT(do.by.quantile(second.data, 15)) #
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
increment.data = get.increments(second.data, 15)
# Plot them
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=10) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=5) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
second.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages=="3") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
increment.data = get.increments(second.data, 15)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=5) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
first.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages=="1") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)
increment.data = get.increments(first.data, 15)
increment.data = get.increments(first.data, 15)
ggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=5) +
geom_hline(aes(yintercept=0), linetype="dashed") + xlab("Bins") +   ylab("Increments") +   theme(text = element_text(size=30)) +   theme(legend.position="none")
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(xtable)
source("neg-data.R")
source("binning.R")
neg.data.full = cleanNegData("coding.cod.ooo")
neg.data.full = tbl_df(neg.data.full)
excluded.texts = c("CMBOETH", "CMORM", "CMNTEST","CMOTEST")
neg.data.full = neg.data.full %>% filter(! author %in% excluded.texts & exclude != "X")
neg.data.full
neg.data.full$ne.type
neg.data.full$neg.type
neg.data.full = cleanNegData("coding.cod.ooo")
neg.data.full = tbl_df(neg.data.full)
excluded.texts = c("CMBOETH", "CMORM", "CMNTEST","CMOTEST")
neg.data.full = neg.data.full %>% filter(! author %in% excluded.texts & exclude != "X")
neg.plot.auth = neg.data.full %>% group_by(year) %>% summarize(total=n(), ne=sum(neg.type=="ne", na.rm=TRUE)/total,not=sum(neg.type=="not", na.rm=TRUE)/total,ne.not=sum(neg.type=="both", na.rm=TRUE)/total)
neg.plot.auth = melt(neg.plot.auth, id=c("year", "total"))
ggplot(aes(x = year, y = value, color = variable), data = neg.plot.auth) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=4) + # span=.5,
xlab("Year") +   ylab("Proportion forms") +   scale_size_area("N", max_size = 20) +
theme(text = element_text(size=30)) +   theme(legend.position="none") +
coord_cartesian(xlim = c(1090,1540)) +  coord_cartesian(ylim = c(-.1,1.1))
neg.data.full
neg.data.full %>%
filter(! author %in% excluded.texts & exclude != "X")  %>%
filter(! exclude)
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(xtable)
source("neg-data.R")
source("binning.R")
neg.data.full = cleanNegData("coding.cod.ooo")
neg.data.full = tbl_df(neg.data.full)
# Filter out tokens without do-support label, year, or type
excluded.texts = c("CMBOETH", "CMORM", "CMNTEST","CMOTEST")
# CMBOETH : translation of Boethius' "Consolation of Philosophy", which is notably stilted
# CMORM   : Ormulum is very specific poetic format
# CMOTEST, CMNTEST : Old and new testaments
# Exclude tokens where 'ne' is contracted, appears in negative concord, or looks like predicate negation
neg.data.full = neg.data.full %>% filter(! author %in% excluded.texts & exclude != "X")
neg.plot.auth = neg.data.full %>% group_by(year) %>% summarize(total=n(), ne=sum(neg.type=="ne", na.rm=TRUE)/total,not=sum(neg.type=="not", na.rm=TRUE)/total,ne.not=sum(neg.type=="both", na.rm=TRUE)/total)
neg.plot.auth = melt(test, id=c("year", "total"))
# Plot points and smooth fits
ggplot(aes(x = year, y = value, color = variable), data = neg.plot.auth) +
geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +
geom_smooth(aes(weight = total),method="loess", span=.5, se = FALSE, size=4) + # span=.5,
xlab("Year") +   ylab("Proportion forms") +   scale_size_area("N", max_size = 20) +
theme(text = element_text(size=30)) +   theme(legend.position="none") +
coord_cartesian(xlim = c(1090,1540)) +  coord_cartesian(ylim = c(-.1,1.1))
start = min(neg.data.full$year)
end = max(neg.data.full$year)
# Get years for bins
df.bins = seq(start, end,(end - start)/5)
# Summarize data
neg.data.full %>%
group_by(cut(year,df.bins, include.lowest=TRUE)) %>%
summarize(value=sum(value), count=n())
sum.df = neg.data.full %>% group_by(cut(year,df.bins, include.lowest=TRUE)) %>% summarize(count=n())
colnames(sum.df) = c('year','value','count')
neg.data.full %>%
group_by(cut(year,df.bins, include.lowest=TRUE)) %>%
summarize(value=sum(value), count=n())
neg.data.full %>%
group_by(cut(year,df.bins, include.lowest=TRUE)) %>%
summarize(count=n())
sum.df = neg.data.full %>%
group_by(cut(year,df.bins, include.lowest=TRUE)) %>%
summarize(count=n())
sum.df
colnames(sum.df) = c('year', 'count')
years = as.integer((head(df.bins,-1) + tail(df.bins,-1))/2)
sum.df$year = years
sum.df
df.bins = seq(start, end,(end - start)/5)
df.quants = as.vector(quantile(df$year, probs=seq(0,1,1/5)))
df.quants = as.vector(quantile(neg.data.full$year, probs=seq(0,1,1/5)))
df.quants
