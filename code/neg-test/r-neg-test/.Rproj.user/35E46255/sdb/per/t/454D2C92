{
    "contents" : "##########################################################################\n# Load libraries and scripts\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(xtable)\nsource(\"neg-data.R\")\nsource(\"binning.R\")\n##########################################################################\n# Read in data file and filter out texts and contexts\nneg.data.full = cleanNegData(\"coding.cod.ooo\")\nneg.data.full = tbl_df(neg.data.full)\n\ntest = neg.data.full %>% filter(not == \"preverbal\") %>% select(year)\n# Filter out tokens without do-support label, year, or type\nexcluded.texts = c(\"CMBOETH\", \"CMORM\", \"CMNTEST\",\"CMOTEST\")\n#excluded.texts = c()\n# CMBOETH : translation of Boethius' \"Consolation of Philosophy\", which is notably stilted\n# CMORM   : Ormulum is very specific poetic format\n# CMOTEST, CMNTEST : Old and new testaments\n# Exclude tokens where 'ne' is contracted, appears in negative concord, or looks like predicate negation\nneg.data.full = neg.data.full %>% filter(! author %in% excluded.texts & exclude != \"X\") \n\n\n# Export ne vs (ne...not and not)\nfirst.curve.data = neg.data.full %>% \n  mutate(value=as.integer(stages==2 | stages==3)) %>% \n  select(value, year, author) %>% arrange(year)\nwrite.csv(first.curve.data, \"first_curve_data.csv\", row.names = F)\n# Export (ne and ne...not) vs. not\nsecond.curve.data = neg.data.full %>% \n  mutate(value=as.integer(stages==3)) %>% \n  select(value, year, author) %>% arrange(year)\nwrite.csv(second.curve.data, \"second_curve_data.csv\", row.names = F)\n\nsecond.curve.data %>% group_by(year) %>% summarize(total=n(), count=sum(value), p=sum(value)/total)\nsecond.curve.data %>% group_by(year) %>% summarize(total=n(), count=sum(value), p=sum(value)/total) %>% filter(year >= 1300)\n#binary.data = neg.data.full %>% mutate(value=as.integer(stages==2 | stages==3)) %>% select(value, year, author) %>% arrange(year)\n#write.csv(binary.data, \"first_curve_data.csv\", row.names = F)\n\nneg.data.full %>% filter(not == \"preverbal\") %>% group_by(year, stages) %>% summarize(count=n())\n\nggplot(binary.data, aes(year, value)) + geom_point()\n\nneg.data.full %>% filter(year <= 1150) %>%\n  group_by(stages) %>% summarize(count=n()) \n\nneg.data.full %>% filter(year > 1150 & year <=1250) %>%\n  group_by(stages) %>% summarize(count=n())\n\n\nneg.data.full %>% filter(year > 1250 & year <=1350) %>%\n  group_by(stages) %>% summarize(count=n())\n\nneg.data.full %>% arrange(year) %>% group_by(year, author) %>% summarize(count=n())\n\nneg.plot.auth = neg.data.full %>% group_by(year) %>% summarize(total=n(), ne=sum(neg.type==\"ne\", na.rm=TRUE)/total,not=sum(neg.type==\"not\", na.rm=TRUE)/total,ne.not=sum(neg.type==\"both\", na.rm=TRUE)/total)\nneg.plot.auth %>% summarize(count=sum(total))\n\nneg.plot.auth %>% filter(year <= 1150)\nneg.plot.auth %>% filter(year <= 1150) %>% summarize(count=sum(total))\nneg.plot.auth %>% filter(year >= 1150 & year <= 1250) %>% summarize(count=sum(total))\nneg.plot.auth %>% filter(year >= 1250 & year <= 1350) %>% summarize(count=sum(total))\nneg.plot.auth %>% filter(year > 1350 & year <= 1420) %>% summarize(count=sum(total))\nneg.plot.auth %>% filter(year > 1420) %>% summarize(count=sum(total))\nneg.plot.auth %>% filter(year < 1150)\nneg.plot.auth %>% filter(year <= 1200)\n\n# Plot individual documents\nneg.plot.auth = melt(neg.plot.auth, id=c(\"year\", \"total\"))\n# Plot points and smooth fits\nggplot(aes(x = year, y = value, color = variable), data = neg.plot.auth) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", span=.5, se = FALSE, size=4) + # span=.5,\n  xlab(\"Year\") +   ylab(\"Proportion forms\") +   scale_size_area(\"N\", max_size = 20) +\n  theme(text = element_text(size=30)) +   theme(legend.position=\"none\") +\n  coord_cartesian(xlim = c(1090,1540)) +  coord_cartesian(ylim = c(-.1,1.1))\n\n\n\nneg.plot.auth %>% filter(year >= 1150 & year <= 1250) %>% summarize(count=sum(total))\n###############################\n# Lump things together\n###############################\n# Compare ne to ne...not and not\nfirst.data = neg.data.full %.% group_by(year) %>% mutate(value = ! stages==\"1\") %>% select(year, value)\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = first.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\",span=.5,  se = FALSE, size=5) + # span=.5,\n  xlab(\"Year\") +   ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) +  coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(first.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(first.data, 9))[c(7,10)]  # Breaks are non-unique for finer bins\ndo.by.quantiles(first.data, 8, \"LUMP-FIRST\")\n\n################################\n# Compare ne and ne...not to not\nsecond.data = neg.data.full %>% group_by(year) %.% mutate(value = stages==\"3\") %>% select(year, value)\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\",span=.5, se = FALSE, size=5) + # span=.5\n  xlab(\"Year\") + ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(second.data, 8), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(second.data, 9))[c(7,10)]  # Non-unique breaks or absorption events\ndo.by.quantiles(second.data, 8, \"LUMP-SECOND\")\n###############################\n# Split things by date ~1350\n###############################\n# Compare ne to ne...not before ~1350\nfirst.data = neg.data.full %.% filter(stages !=3 & year <=1350) %.% group_by(year) %.% mutate(value = ! stages==\"1\") %>% select(year, value)\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = first.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\",  se = FALSE, size=5) + # span=.5,\n  xlab(\"Year\") + ylab(\"Proportion\") +   theme(text = element_text(size=20)) +   theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4, 4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Non-unique breaks\ndo.by.quantiles(first.data, 5, \"SPLIT-FIRST\")\n# Compare ne...not to not after ~1350\nsecond.data = neg.data.full %.% filter(stages != 1 & year >= 1350) %.% group_by(year) %.% mutate(value = stages==\"3\") %>% select(year, value)\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", span=.45, se = FALSE, size=5) +\n  xlab(\"Year\") + ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(second.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(second.data, 6))[c(7,10)] # Non-unique breaks\ndo.by.quantiles(second.data, 5, \"SPLIT-SECOND\")\n######################################\n# Plot the number of documents by year\nauth.plot.data = neg.data.full %>% group_by(author, year) %>% summarize() %>% arrange(year)\nggplot(auth.plot.data, aes(x=year)) + geom_histogram(binwidth=1) + theme(text = element_text(size=20))\n# Add noise to year for each document\nset.seed(1)\nneg.data.jitter = neg.data.full %>% group_by(author) %>% mutate(year = year + (year[1] - jitter(year[1], amount=.5)))\n# Check to make sure number of unique dates matches documents\nlength(unique(neg.data.jitter$year))\nlength(unique(neg.data.jitter$author))\n########################################\n# Disaggreagate and Lump things together\n########################################\n# Compare ne to ne...not and not\nfirst.data = neg.data.jitter %.% group_by(year, author) %.% mutate(value = ! stages==\"1\") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = first.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", span=.5, se = FALSE, size=5) +\n  xlab(\"Year\") + ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(first.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(first.data, 11)) # Absorption event\ndo.FIT(do.by.quantile(first.data, 12)) # 0.2835811, 0.1470875\ndo.FIT(do.by.quantile(first.data, 13)) # 0.1361334, 0.3205971\ndo.FIT(do.by.quantile(first.data, 14)) # \ndo.FIT(do.by.quantile(first.data, 15)) # \ndo.FIT(do.by.quantile(first.data, 16)) # Absorption event\n# Output the data\ndo.by.quantiles(first.data, 16, \"JITTER-LUMP-FIRST\")\n# Get increments\nincrement.data = get.increments(first.data, 15)\n# Plot them\nggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=5) + \n  geom_hline(aes(yintercept=0), linetype=\"dashed\") + xlab(\"Bins\") +   ylab(\"Increments\") +   theme(text = element_text(size=30)) +   theme(legend.position=\"none\")  \n# Compare ne and ne...not to not\nsecond.data = neg.data.jitter %>% group_by(year) %.% mutate(value = stages==\"3\") %>% mutate(jyear = jitter(year, amount=.5)) %>% select(year, value)\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", span=.45, se = FALSE, size=5) +\n  xlab(\"Year\") + ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(second.data, 10), digits=c(0,0,0,0,0,4,4,4,0,0,4,4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(second.data, 11)) #\ndo.FIT(do.by.quantile(second.data, 12)) #\ndo.FIT(do.by.quantile(second.data, 13)) #\ndo.FIT(do.by.quantile(second.data, 14)) #\ndo.FIT(do.by.quantile(second.data, 15)) #\n# Output data\ndo.by.quantiles(second.data, 16, \"JITTER-LUMP-SECOND\")\n# Get increments\nincrement.data = get.increments(second.data, 15)\n# Plot them\nggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments)), size=5) + \n  geom_hline(aes(yintercept=0), linetype=\"dashed\") + xlab(\"Bins\") +   ylab(\"Increments\") +   theme(text = element_text(size=30)) +   theme(legend.position=\"none\")  \n\n\n\n###################################################\n# Disaggreagate and Split things by date ~1350\n###################################################\n# Compare ne to ne...not before ~1350\nfirst.data = neg.data.jitter %.% filter(stages !=3 & year <=1351) %.% group_by(year) %.% mutate(value = ! stages==\"1\") %>% select(year, value)\n# Output the data\ndo.by.quantiles(first.data, 5, \"JITTER-SPLIT-FIRST\")\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = first.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", se = FALSE, size=5) +\n  xlab(\"Year\") + ylab(\"Proportion\") +   theme(text = element_text(size=20)) +   theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(first.data, 5), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(first.data, 4))[c(7,10)] # Boundary  p = .13394961\ndo.FIT(do.by.quantile(first.data, 5))[c(7,10)] # Nope      p = .12035848 ! SW-p = 0.02479866\ndo.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 7))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 8))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 9))[c(7,10)] # Non-unique breaks\n# Compare ne...not to not after ~1350\nsecond.data = neg.data.jitter %.% filter(stages != 1 & year >= 1349) %.% group_by(year) %.% mutate(value = stages==\"3\")\n# Output the data\ndo.by.quantiles(second.data, 9, \"JITTER-SPLIT-SECOND\")\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% summarize(count = sum(as.numeric(value)), total=n()) %.% mutate(p = count / total)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\",  se = FALSE, size=5) +\n  xlab(\"Year\") + ylab(\"Proportion\") + theme(text = element_text(size=20)) + theme(legend.position=\"none\") +\n  scale_size_area(\"N\", max_size = 20) + coord_cartesian(xlim = c(1090,1540)) + coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nprint(xtable(q.table(second.data, 9), digits=c(0,0,0,0,0,4,4,4,0,0,4)), include.rownames=FALSE) # These are our main results\ndo.FIT(do.by.quantile(second.data, 10)) # Absorption\n# Get increments\nincrement.data = get.increments(second.data, 9)\n# Plot them\nggplot(increment.data, aes(factor(increments), Yi)) + geom_boxplot() + geom_point(aes(color=factor(increments))) + \n  geom_hline(aes(yintercept=0), linetype=\"dashed\") + xlab(\"Bins\") +   ylab(\"Increments\") +   theme(text = element_text(size=30)) +   theme(legend.position=\"none\")  \n\n\n###############################\n# For the appendix\n###############################\n# Split things apart completely\n###############################\n# Compare ne to ne...not\nfirst.data = neg.data.full %.% filter(stages !=3) %.% dplyr::group_by(year) %.% dplyr::mutate(value = ! stages==\"1\")\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% dplyr::summarize(count = sum(as.numeric(value)), total=n()) %.% dplyr::mutate(p = count / total)\nggplot(aes(x = year, y = p), data = first.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", se = FALSE, size=5) + # span=.45, \n  xlab(\"Year\") +\n  ylab(\"Proportion\") +\n  scale_size_area(\"N\", max_size = 20) +\n  theme(text = element_text(size=20)) + \n  theme(legend.position=\"none\") +\n  coord_cartesian(xlim = c(1090,1540)) +\n  coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\ndo.FIT(do.by.quantile(first.data, 4))[c(7,10)] # Nope p = .19137741\ndo.FIT(do.by.quantile(first.data, 5))[c(7,10)] # Nope p = .509845867\ndo.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Nope p = .4876574\ndo.FIT(do.by.quantile(first.data, 7))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 8))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 9))[c(7,10)] # Non-unique breaks\n# Compare ne and ne...not to not\nsecond.data = neg.data.full %.% filter(stages != 1) %.% dplyr::group_by(year) %.% dplyr::mutate(value = stages==\"3\") %>% mutate(jyear = jitter(year, amount=.5))\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% dplyr::summarize(count = sum(as.numeric(value)), total=n()) %.% dplyr::mutate(p = count / total)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = total), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = total),method=\"loess\", se = FALSE, size=5) + # span=.45, \n  xlab(\"Year\") +\n  ylab(\"Proportion\") +\n  scale_size_area(\"N\", max_size = 20) +\n  theme(text = element_text(size=20)) + \n  theme(legend.position=\"none\") +\n  coord_cartesian(xlim = c(1090,1540)) +\n  coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\nsecond.data$year = second.data$jyear\ndo.FIT(do.by.quantile(second.data, 4))[c(7,10)] # Marginal   p = .05787163\ndo.FIT(do.by.quantile(second.data, 5))[c(7,10)] # Absorption\ndo.FIT(do.by.quantile(second.data, 6))[c(7,10)] # Nope       p = .15152610\ndo.FIT(do.by.quantile(second.data, 7))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(second.data, 8))[c(7,10)] # Absorption\ndo.FIT(do.by.quantile(second.data, 9))[c(7,10)] # Non-unique breaks\n###############################\n# Lump things around ~1350\n###############################\n# Compare ne to ne...not and not before ~1350\nfirst.data = neg.data.full %.% filter(year <=1350) %.% dplyr::group_by(year) %.% dplyr::mutate(value = ! stages==\"1\") %>% select(year, value)\n# Plot comparison\nfirst.plot.data = first.data %.% group_by(year) %.% dplyr::summarize(count = sum(as.numeric(value)), total=n()) %.% dplyr::mutate(p = count / total) %.% select(year, p)\nggplot(aes(x = year, y = p), data = first.plot.data, position = position_jitter()) +\n  geom_point(aes(size = p), alpha = 0.5) +\n  geom_smooth(aes(weight = p),method=\"loess\", span=.45, se = FALSE, size=5) +\n  xlab(\"Year\") +\n  ylab(\"Proportion\") +\n  scale_size_area(\"N\", max_size = 20) +\n  theme(text = element_text(size=20)) + \n  theme(legend.position=\"none\") +\n  coord_cartesian(xlim = c(1090,1540)) +\n  coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\ndo.FIT(do.by.quantile(first.data, 4))[c(7,10)] # Boundary  p = .13280303\ndo.FIT(do.by.quantile(first.data, 5))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 6))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 7))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 8))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(first.data, 9))[c(7,10)] # Non-unique breaks\n# Compare ne...not to not after ~1350\nsecond.data = neg.data.full %.% filter(year >= 1350) %.% dplyr::group_by(year) %.% dplyr::mutate(value = stages==\"3\") %>% select(year, value)\n# Plot comparison\nsecond.plot.data = second.data %.% group_by(year) %.% dplyr::summarize(count = sum(as.numeric(value)), total=n()) %.% dplyr::mutate(p = count / total) %.% select(year, p)\nggplot(aes(x = year, y = p), data = second.plot.data) +\n  geom_point(aes(size = p), alpha = 0.5, position = position_jitter()) +\n  geom_smooth(aes(weight = p),method=\"loess\", span=.45, se = FALSE, size=5) +\n  xlab(\"Year\") +\n  ylab(\"Proportion\") +\n  scale_size_area(\"N\", max_size = 20) +\n  theme(text = element_text(size=20)) + \n  theme(legend.position=\"none\") +\n  coord_cartesian(xlim = c(1090,1540)) +\n  coord_cartesian(ylim = c(-.1,1.1))\n# Run FIT\ndo.FIT(do.by.quantile(second.data, 4))[c(7,10)] # Boundary p = .09217675\ndo.FIT(do.by.quantile(second.data, 5))[c(7,10)] # Marginal p = .05872777\ndo.FIT(do.by.quantile(second.data, 6))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(second.data, 7))[c(7,10)] # Absorption\ndo.FIT(do.by.quantile(second.data, 8))[c(7,10)] # Non-unique breaks\ndo.FIT(do.by.quantile(second.data, 9))[c(7,10)] # Non-unique breaks\n################################################################\n# Some dates appeared to be wrong! But now are fixed\n# Priority of circa data over ante date, unless ? info\n################################################################\n# What are the author dates?\nauthor.dates = data.frame(auth=character(), year=numeric())\nfor (a in unique(neg.data.full$author)){\n  date = unique(filter(neg.data.full, author == a)$year)\n  auth.add = data.frame(auth=a, year=date)  \n  author.dates = rbind(author.dates, auth.add)\n}\nauthor.dates = arrange(author.dates, year)\nwrite.csv(author.dates, file=\"PPCME2dates.csv\", row.names=FALSE)\n# Let's look at the proprotions for a given author\ninspect.author = function(a){\n  return(neg.data.full %.% dplyr::filter(author == a) %.% dplyr::summarize(ne = sum(stages == \"1\"), ne.not = sum(stages == \"2\"), not = sum(stages == \"3\"), count = n()) %.% dplyr::mutate(ne = ne / count) %.% dplyr::mutate(ne.not = ne.not / count) %.% dplyr::mutate(not = not / count))\n}",
    "created" : 1443551550889.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "481834251",
    "id" : "454D2C92",
    "lastKnownWriteTime" : 1446871055,
    "path" : "~/Dropbox/dissertation/code/neg-test/r-neg-test/neg-report.R",
    "project_path" : "neg-report.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}