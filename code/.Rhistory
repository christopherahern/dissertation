curve(ft(x, .1,.5), xlim=c(0,1),add=T)
ft = function(x, a, b) ((b-a)/b)*(x*(1-x)*fa(x, a, b) +  x*(1-x)*fb(x,a,b))
# Let's try to find the form
curve(ft(x, .1,.5), xlim=c(0,1),add=T)
curve(fa(x, .1, .5), xlim=c(0,1))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(fa(x, .2, .5), xlim=c(0,1))
curve(fb(x, .2, .5), xlim=c(0,1), add=T)
curve(f(x, .2, .5), xlim=c(0,1), add=T)
curve(fa(x, .3, .5), xlim=c(0,1))
curve(fb(x, .3, .5), xlim=c(0,1), add=T)
curve(f(x, .3, .5), xlim=c(0,1), add=T)
curve(fa(x, .4, .5), xlim=c(0,1))
curve(fb(x, .4, .5), xlim=c(0,1), add=T)
curve(f(x, .4, .5), xlim=c(0,1), add=T)
curve(fa(x, .5, .5), xlim=c(0,1))
curve(fb(x, .5, .5), xlim=c(0,1), add=T)
curve(f(x, .5, .5), xlim=c(0,1), add=T)
curve(fa(x, .49, .5), xlim=c(0,1))
curve(fb(x, .49, .5), xlim=c(0,1), add=T)
curve(f(x, .49, .5), xlim=c(0,1), add=T)
ft = function(x, a, b) .5*(1-x)*fa(x, a, b) +  .5*x*(1-x)*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .1,.5), xlim=c(0,1),add=T)
ft = function(x, a, b) .5*(1-x)*fa(x, a, b) +  .5*x*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .1,.5), xlim=c(0,1),add=T)
curve(fa(x, .4, .5), xlim=c(0,1))
curve(fb(x, .4, .5), xlim=c(0,1), add=T)
curve(f(x, .4, .5), xlim=c(0,1), add=T)
ft = function(x, a, b) .5*(1-x)*fa(x, a, b) +  .5*x*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .4,.5), xlim=c(0,1),add=T)
curve(fa(x, .4, .5), xlim=c(0,1))
curve(fb(x, .4, .5), xlim=c(0,1), add=T)
curve(f(x, .4, .5), xlim=c(0,1), add=T)
ft = function(x, a, b) .5*(1-x)*fa(x, a, b) +  .5*x*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .4,.5), xlim=c(0,1),add=T)
ft = function(x, a, b) .5*fa(x, a, b) +  .5*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .4,.5), xlim=c(0,1),add=T)
curve(fa(x, .4, .5), xlim=c(0,1))
curve(fb(x, .4, .5), xlim=c(0,1), add=T)
curve(f(x, .4, .5), xlim=c(0,1), add=T)
ft = function(x, a, b) .5*fa(x, a, b) +  .5*fb(x,a,b)
# Let's try to find the form
curve(ft(x, .4,.5), xlim=c(0,1),add=T)
curve(fa(x, 0, .5), xlim=c(0,1))
curve(fb(x, 0, .5), xlim=c(0,1), add=T)
curve(f(x, 0, .5), xlim=c(0,1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
ft = function(x, a, b) .5*fa(x, a, b) +  .5*fb(x,a,b)
curve(ft(x, .1,.5), xlim=c(0,1),add=T)
f = function(x, a, b) x*(1-x)*((b - a)/(a*(1-x)+b*x))
fa = function(x, a, b) x*(1-x)*((b - a)/a) # upper curve
fb = function(x, a, b) x*(1-x)*((b - a)/b)
curve(fa(x, .1, .5), xlim=c(0,1))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(fb(x, 0, .5), xlim=c(0,1), add=T)
curve(f(x, 0, .5), xlim=c(0,1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(fa(x, 0, .5), xlim=c(0,1))
curve(fb(x, 0, .5), xlim=c(0,1), add=T)
curve(fb(x, 0, .5), xlim=c(0,1))
curve(f(x, 0, .5), xlim=c(0,1), add=T)
curve(f(x, 0, .5), xlim=c(0,1))
curve(fb(x, 0, .5), xlim=c(0,1), add=T)
curve(f(x, 0, .5), xlim=c(0,1))
curve(fb(x, 0, .5), xlim=c(0,1), add=T)
curve(fa(x, .1, .12), xlim=c(0,1))
curve(fb(x, .1, .12), xlim=c(0,1), add=T)
curve(f(x, .1, .12), xlim=c(0,1), add=T)
curve(fa(x, .1, .11), xlim=c(0,1))
curve(fb(x, .1, .11), xlim=c(0,1), add=T)
curve(f(x, .1, .11), xlim=c(0,1), add=T)
library(ggplot2)
library(dplyr)
library(reshape)
f = function(x, a, b) x*(1-x)*((b - a)/(a*(1-x)+b*x))
fa = function(x, a, b) x*(1-x)*((b - a)/a) # upper curve
fb = function(x, a, b) x*(1-x)*((b - a)/b) # lower curve
curve(fa(x, .1, .5), xlim=c(0,1))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression("p"["neg V neg"]))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
text(.5, .5, expression("p"["neg V neg"]))
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
text(.5, .5, expression(dot(p)["a"]))
text(.5, .5, expression(dot(p)[alpha]))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
text(.2, .8, expression(dot(p)[alpha]))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
text(.2, .05, expression(dot(p)[beta]))
curve(f(x, .1, .5), xlim=c(0,1), add=T)
text(.2, .4, expression(dot(p)))
curve(f(x, 0, .5), xlim=c(0,1))
ga = function(x, a, b, x.0) ((x.0/(1-x.0))*exp((b - a)/a))/(1 + (x.0/(1-x.0))*exp((b - a)/a))
curve(ga(x, .1, .5, .01), xlim=c(0,1), xlab='t')
ga = function(x, a, b, x.0) ((x.0/(1-x.0))*exp((b - a)/a))/(1 + (x.0/(1-x.0))*exp((b - a)/a))
ga
curve(ga(x, .1, .5, .01), xlim=c(0,1))
x
ga = function(x, a, b, x0) ((x0/(1-x0))*exp((b - a)/a))/(1 + (x0/(1-x0))*exp((b - a)/a))
curve(ga(x, .1, .5, .01), xlim=c(0,1))
ga = function(x, a, b, x0) ((x0/(1-x0))*exp((b - a)/a))/(1 + (x0/(1-x0))*exp((b - a)/a))$value
ga = function(x, a, b, x0) ((x0/(1-x0))*exp((b - a)/a))/(1 + (x0/(1-x0))*exp((b - a)/a))$value
curve(vectorize(ga(x, .1, .5, .01)), xlim=c(0,1))
curve(Vectorize(ga(x, .1, .5, .01)), xlim=c(0,1))
ga = function(x, a, b, x0) ((x0/(1-x0))*exp((b - a)/a))/(1 + (x0/(1-x0))*exp((b - a)/a))
curve(Vectorize(ga(x, .1, .5, .01)), xlim=c(0,1))
p=seq(0,1,.001)
ga(p, .1, .5, .01)
p=seq(0,1,.001)
p
ga(p, .1, .5, .01)
ga = function(a, b, x0) ((x0/(1-x0))*exp((b - a)/a))/(1 + (x0/(1-x0))*exp((b - a)/a))
ga(.1, .5, .01)
t = seq(0,1,.001)
ga = function(t, a, b, x0) ((x0/(1-x0))*exp(t*(b - a)/a))/(1 + (x0/(1-x0))*exp(t*(b - a)/a))
ga(t, .1, .5, .01)
plot(t, test)
test = ga(t, .1, .5, .01)
plot(t, test)
t = seq(0,10,.001)
test = ga(t, .1, .5, .01)
plot(t, test)
t = seq(0,2,.001)
ga = function(t, a, b, x0) ((x0/(1-x0))*exp(t*(b - a)/a))/(1 + (x0/(1-x0))*exp(t*(b - a)/a))
test = ga(t, .1, .5, .01)
plot(t, test)
plot(t, test, type="l")
gb = function(t, a, b, x0) ((x0/(1-x0))*exp(t*(b - a)/b))/(1 + (x0/(1-x0))*exp(t*(b - a)/b))
ta = ga(t, .1, .5, .01)
tb = gb(t, .1, .5, .01)
plot(t, ta, type="l")
plot(t, tb, type="l", add=T)
t = seq(0,10,.001)
t = seq(0,10,.001)
ta = ga(t, .1, .5, .01)
tb = gb(t, .1, .5, .01)
plot(t, ta, type="l")
plot(t, tb, type="l")
plot(t, ta, type="l")
lines(t, tb, add=T)
ga = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/a))/(1 + (x0/(1-x0))*exp(x*(b - a)/a))
curve(ga(x, .1, .5, .01), xlim=c(0,1))
curve(ga(x, .1, .5, .01), xlim=c(0,10))
ga = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/a))/(1 + (x0/(1-x0))*exp(x*(b - a)/a))
gb = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/b))/(1 + (x0/(1-x0))*exp(x*(b - a)/b))
curve(ga(x, .1, .5, .01), xlim=c(0,10))
curve(gb(x, .1, .5, .01), xlim=c(0,10))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10), add=T)
text(1, .8, expression(p[alpha]))
text(4, .05, expression(p[beta]))
test = generate.p(.01, .1, .5, 10)
test
plot(test, ylim=c(0,1), xlab="Time", ylab=expression("p"["not"]), type="l", cex.lab=2)
n
ga = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/a))/(1 + (x0/(1-x0))*exp(x*(b - a)/a))
gb = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/b))/(1 + (x0/(1-x0))*exp(x*(b - a)/b))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10), add=T)
text(1, .8, expression(p[alpha]))
text(4, .05, expression(p[beta]))
generate.p = function(init.p,a,b,n) {
vector = rep(0, n)
print(vector)
vector[1] = init.p
for (i in 2:n){
vector[i] = vector[i-1] + g(a,b,vector[i-1])
}
return(vector)
}
test = generate.p(.01, .1, .5, 10)
g = function(a,b,x) a*x/(a*x + b*(1-x)) - x
generate.p = function(init.p,a,b,n) {
vector = rep(0, n)
print(vector)
vector[1] = init.p
for (i in 2:n){
vector[i] = vector[i-1] + g(a,b,vector[i-1])
}
return(vector)
}
test = generate.p(.01, .1, .5, 10)
test
test = generate.p(.01, .5, .1, 10)
plot(test, ylim=c(0,1), xlab="Time", ylab=expression("p"["not"]), type="l", cex.lab=2)
ga = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/a))/(1 + (x0/(1-x0))*exp(x*(b - a)/a))
gb = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/b))/(1 + (x0/(1-x0))*exp(x*(b - a)/b))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10), add=T)
text(1, .8, expression(p[alpha]))
text(4, .05, expression(p[beta]))
text(.2, .4, expression(dot(p)))
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
text(.2, .8, expression(dot(p)[alpha]))
text(.2, .05, expression(dot(p)[beta]))
text(.2, .4, expression(dot(p)))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .5, .1), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .5, .1), xlim=c(0,1), add=T)
curve(f(x, .5, .1), xlim=c(0,1), add=T)
curve(fb(x, .5, .1), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fa(x, .5, .1), xlim=c(0,1), add=T)
curve(f(x, .5, .1), xlim=c(0,1), add=T)
curve(fb(x, .5, .1), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fa(x, .5, .1), xlim=c(0,1), add=T)
curve(f(x, .5, .1), xlim=c(0,1), add=T)
ga = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/a))/(1 + (x0/(1-x0))*exp(x*(b - a)/a))
gb = function(x, a, b, x0) ((x0/(1-x0))*exp(x*(b - a)/b))/(1 + (x0/(1-x0))*exp(x*(b - a)/b))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10), add=T)
text(1, .8, expression(p[alpha]))
text(4, .05, expression(p[beta]))
r = function(x, k, delta) k*((delta - 1)*exp(k*(-x + 0.309016994374947)) + 1)**(-delta/(delta - 1))*exp(k*(-x + 0.309016994374947))
curve(ga(x, .1, .5, .01), xlim=c(0,10), xlab='t', ylab='p')
curve(gb(x, .1, .5, .01), xlim=c(0,10), add=T)
curve(r(x, .8, .4), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(r(x, .8, .4), add=T)
curve(r(x, 1, .4), add=T)
curve(r(x, 1, .3), add=T)
curve(r(x, 1, .1), add=T)
curve(r(x, 1, 1), add=T)
curve(r(x, 4, .1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(r(x, 4, .1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(r(x, .5, .1), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(r(x, .5, .1), add=T)
curve(r(x, .5, .2), add=T)
curve(r(x, .5, .3), add=T)
curve(r(x, .5, ..01), add=T)
curve(r(x, .5, .01), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(r(x, .5, .1), add=T)
curve(r(x, .4, .1), add=T)
curve(r(x, .3, .1), add=T)
curve(r(x, .7, .1), add=T)
s = function(x,a,v) a*(1-x^v)*x
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5), xlim=c(0,1), add=T)
curve(f(x, .1, .5),  add=T)
curve(s(x, .1, .5), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), add=T)
curve(f(x, .1, .5),  add=T)
curve(s(x, .1, .5), add=T)
curve(s(x, .2, .5), add=T)
curve(s(x, 4, .5), add=T)
curve(s(x, 2, .5), add=T)
curve(s(x, 2, .1), add=T)
curve(s(x, 2, .2), add=T)
par(mar=c(5,5.4,4.1,2.1))
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fb(x, .1, .5), add=T)
curve(f(x, .1, .5),  add=T)
text(.2, .8, expression(dot(p)[alpha]))
text(.2, .05, expression(dot(p)[beta]))
curve(f(x, .1, .5),  xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(s(x, 2, .1), add=T)
curve(s(x, 3, .1), add=T)
curve(s(x, 3, .2), add=T)
curve(s(x, 3, .3), add=T)
curve(s(x, 4, .3), add=T)
curve(s(x, 4, .25), add=T)
curve(s(x, 2.5, .25), add=T)
curve(f(x, .1, .5),  xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(s(x, 2, .1), add=T)
curve(s(x, 2.5, .25), add=T)
curve(f(x, .1, .5),  xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(r(x, 2, .1), add=T)
curve(r(x, 4, .1), add=T)
curve(r(x, 4, 1), add=T)
curve(r(x, 3, 1), add=T)
curve(r(x, .2, 1), add=T)
curve(r(x, .2, 4), add=T)
curve(r(x, .2, .1), add=T)
curve(r(x, .2, .01), add=T)
curve(fa(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
r = function(Q, B, x, M) B*Q*(Q*exp(-B*(-M + t)) + 1)**(-1/v)*exp(-B*(-M + t))/(v*(Q*exp(-B*(-M + t)) + 1))
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
fr = function(x, Q, B, M) B*Q*(Q*exp(-B*(-M + t)) + 1)**(-1/v)*exp(-B*(-M + t))/(v*(Q*exp(-B*(-M + t)) + 1))
curve(fr(x, .1, .8, .5), add=T)
fr = function(x, Q, B, M, v) B*Q*(Q*exp(-B*(-M + t)) + 1)**(-1/v)*exp(-B*(-M + t))/(v*(Q*exp(-B*(-M + t)) + 1))
curve(fr(x, .1, .8, .5, 1), add=T)
fr = function(x, Q, B, M, v) B*Q*(Q*exp(-B*(-M + x)) + 1)**(-1/v)*exp(-B*(-M + x))/(v*(Q*exp(-B*(-M + x)) + 1))
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, .1, .8, .5, 1), add=T)
curve(fr(x, .1, .8, 1, 1), add=T)
curve(fr(x, .1, 4, .5, 1), add=T)
curve(fr(x, .1, 2, .5, 1), add=T)
curve(fr(x, 1, 2, .5, 1), add=T)
curve(fr(x, 1, 2, .5, 1))
curve(fr(x, 1, 2, .5, 2))
curve(fr(x, 1, 2, .5, .8))
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, 1, 2, .5, .8))
curve(fr(x, .1, .8, .5, 2), add=T)
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, .1, .8, .5, 2), add=T)
curve(fr(x, 1, 2, .5, 2)
curve(fr(x, 1, 2, .5, 2)
curve(fr(x, 1, 2, .5, 2))
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, 1, 2, .5, 2), add=T)
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, .1, .8, .5, 2), add=T)
curve(fr(x, 1, 2, .5, 2), add=T)
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, 1, 2, .5, 2), add=T)
curve(fr(x, 1, 2, .5, 3), add=T)
curve(fr(x, 1, 2, .5, 4), add=T)
curve(fr(x, 1, 2, .5, 1), add=T)
curve(fr(x, 1, 2, .5, 1.5), add=T)
curve(fr(x, 2, 2, .5, 1.5), add=T)
curve(fr(x, 2, 2, .5, 2), add=T)
curve(f(x, .1, .5), xlim=c(0,1), xlab='p', ylab=expression(dot(p)))
curve(fr(x, 1, 2, .5, 2), add=T)
curve(fr(x, 2, 2, .5, 2), add=T)
s1 = dbetabinom.ab(x=1:100, size=100, shape1=4, shape2=2)
library(VGAM)
s1 = dbetabinom.ab(x=1:100, size=100, shape1=4, shape2=2)
plot(s1, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
s2 = dbetabinom.ab(x=1:100, size=100, shape1=3, shape2=2)
plot(s2, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
s3 = dbetabinom.ab(x=1:100, size=100, shape1=2, shape2=2)
plot(s3, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
s1 = dbetabinom.ab(x=1:100, size=100, shape1=4, shape2=2)
plot(s1, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
s1 = dbetabinom.ab(x=1:100, size=100, shape1=4, shape2=2)
plot(s1, type='l', yaxt='n', ylab='', xaxt='n', xlab='Coherence Relation given Negation')
hist(s1)
hist(s1, yaxt='n')
hist(s1, yaxt='n', xaxt='n')
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence Relation')
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence Relation', main='')
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence relation given negation', main='')
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence relation given negation', main='', cex=2)
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence relation given negation', main='', cex.lab=2)
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence relation given negation', main='', cex.lab=1.5)
par(mar=c(5,5.4,4.1,2.1))
hist(s1, yaxt='n', ylab='Count', xaxt='n', xlab='Coherence relation given negation', main='', cex.lab=1.5)
s2 = dbetabinom.ab(x=1:100, size=100, shape1=3, shape2=2)
s2 = dbetabinom.ab(x=1:100, size=100, shape1=3, shape2=2)
plot(s2, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
s2 = dbetabinom.ab(x=1:100, size=100, shape1=3, shape2=2)
plot(s2, type='l', yaxt='n', ylab='', xaxt='n', xlab='Discourse Status')
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
s2 = dbeta(x=1:100, size=100, shape1=3, shape2=2)
s2 = dbeta(size=100, shape1=3, shape2=2)
help(dbeta)
dbeta(100, 3, 2)
nbeta(100, 3, 2)
rbeta(100, 3, 2)
s2 = rbeta(100, 3, 2)
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
s2 = sort(rbeta(100, 3, 2))
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
s2 = sort(rbeta(100, 3, 2))
s2
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
s2 = sort(rbeta(1000, 3, 2))
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
s2 = sort(rbeta(10000, 3, 2))
plot(s2, type='l', yaxt='n', ylab='', xlab='Discourse Status')
diag = function(x) 1 - x
x0 = seq(0,1, .01)
diag(x0)
plot(x0, diag(x0))
plot(x0, diag(x0), lty=1)
plot(x0, diag(x0), lty=1)
plot(x0, diag(x0), lty=1)
plot(x0, diag(x0), type='l', lty=1)
plot(x0, diag(x0), type='l', lty=1, size=2)
plot(x0, diag(x0), type='l', lty=1, lwd=2)
points(0,0, pch=21, bg="white")
plot(x0, diag(x0), type='l', lty=1, lwd=2, )
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, )
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab="x_0", ylab="x_1")
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab="x_1")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[0]))
points(0,0, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(y[0]), ylab=expression(y[1]))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]))
axis(1, at=c(0,1))
plot(x0, diag(x0), type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
axis(1, at=c(0,1))
axis(0, at=c(0,1))
axis(2, at=c(0,1))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), cex='2', type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
plot(x0, diag(x0), cex=2, type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
axis(1, at=c(0,1))
axis(2, at=c(0,1))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
plot(x0, diag(x0), cex.lab=2, type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
plot(x0, diag(x0), cex.lab=1.52, type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
axis(1, at=c(0,1))
axis(2, at=c(0,1))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
par(mar=c(5,5.4,4.1,2.1))
plot(x0, diag(x0), cex.lab=1.52, type='l', lty=1, lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
axis(1, at=c(0,1))
axis(2, at=c(0,1))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
par(mar=c(5,5.4,4.1,2.1))
plot(x0, diag(x0), cex.lab=1.52, type='l', lty=1, lwd=4, xlab=expression(y[0]), ylab=expression(y[1]), xaxt='n',yaxt='n')
axis(1, at=c(0,1))
axis(2, at=c(0,1))
points(0,0, pch=21, bg="black")
points(0,1, pch=21, bg="black")
points(1,0, pch=21, bg="black")
points(1,1, pch=21, bg="black")
par(mar=c(5,5.4,4.1,2.1))
plot(x0, diag(x0), cex.lab=1.52, type='l', lty=1, col='white', lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
par(mar=c(5,5.4,4.1,2.1))
plot(x0, diag(x0), cex.lab=1.52, type='l', lty=1, fill='white', lwd=4, xlab=expression(x[0]), ylab=expression(x[1]), xaxt='n',yaxt='n')
install.packages('rsympy', dependencies=T)
install.packages('rSymPy', dependencies=T)
library(rSymPy)
ex <- expression( x^2*y, 5*x+sin(y) )
sapply(ex, deriv, c("x", "y") )
sapply(ex, deriv, c("x", "y") , func=TRUE)
library(numDeriv)
func2 <- function(x) c(sin(x), cos(x))
x <- (0:1)*2*pi
jacobian(func2, x)
func2 <- function(x, y) c(sin(x), cos(y))
jacobian(func2, c(x,y))
y <- (0:1)*2*pi
jacobian(func2, c(x,y))
jacobian(func2, x,y)
install.packages('knitr')
